"use strict";(self.webpackChunknerve_dns_github_io=self.webpackChunknerve_dns_github_io||[]).push([[470],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),g=s,f=d["".concat(l,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,a=new Array(i);a[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:s,a[1]=o;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2895:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(7462),s=(n(7294),n(3905));const i={sidebar_position:1},a="Getting started",o={unversionedId:"client/getting-started",id:"client/getting-started",title:"Getting started",description:"Install",source:"@site/docs/client/getting-started.md",sourceDirName:"client",slug:"/client/getting-started",permalink:"/docs/client/getting-started",draft:!1,editUrl:"https://github.com/nerve-dns/nerve-dns.github.io/docs/client/getting-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Client API",permalink:"/docs/category/client-api"}},l={},c=[{value:"Install",id:"install",level:2},{value:"Use the client",id:"use-the-client",level:2},{value:"HTTP DNS client",id:"http-dns-client",level:3},{value:"UDP DNS client",id:"udp-dns-client",level:3}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"getting-started"},"Getting started"),(0,s.kt)("h2",{id:"install"},"Install"),(0,s.kt)("p",null,"Install via Nuget:"),(0,s.kt)("p",null,"TODO"),(0,s.kt)("h2",{id:"use-the-client"},"Use the client"),(0,s.kt)("h3",{id:"http-dns-client"},"HTTP DNS client"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'var httpDnsClient = new HttpsDnsClient(new Uri("https://cloudflare-dns.com/dns-query"));\n\nvar question = new Question(new DomainName("www.google.de"), Type.A, Class.In);\nMessage message = await httpDnsClient.ResolveAsync(question);\n\nResourceRecord resourceRecord = message.Answers[0];\nif (resourceRecord.Class == Class.In && resourceRecord.Type == Type.A)\n{\n    Console.WriteLine("IP: " + ((AResourceData)resourceRecord.ResourceData!).Address);\n}\n')),(0,s.kt)("h3",{id:"udp-dns-client"},"UDP DNS client"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'var udpDnsClient = new UdpDnsClient(IPAddress.Parse("1.1.1.1"));\n\nvar question = new Question(new DomainName("www.google.de"), Type.A, Class.In);\nMessage message = await udpDnsClient.ResolveAsync(question);\n\nResourceRecord resourceRecord = message.Answers[0];\nif (resourceRecord.Class == Class.In && resourceRecord.Type == Type.A)\n{\n    Console.WriteLine("IP: " + ((AResourceData)resourceRecord.ResourceData!).Address);\n}\n')))}p.isMDXComponent=!0}}]);