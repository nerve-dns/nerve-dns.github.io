"use strict";(self.webpackChunknerve_dns_github_io=self.webpackChunknerve_dns_github_io||[]).push([[446],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5142:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Config",l={unversionedId:"config",id:"config",title:"Config",description:'The config is a json file named "nerve.json" in the same directory the executable is.',source:"@site/docs/config.md",sourceDirName:".",slug:"/config",permalink:"/docs/config",draft:!1,editUrl:"https://github.com/nerve-dns/nerve-dns.github.io/docs/config.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docs/get-started"},next:{title:"Blocklists",permalink:"/docs/blocklists"}},c={},s=[{value:"Quick example",id:"quick-example",level:2},{value:"Detailed explanation",id:"detailed-explanation",level:2}],p={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"config"},"Config"),(0,a.kt)("p",null,'The config is a json file named "nerve.json" in the same directory the executable is.'),(0,a.kt)("h2",{id:"quick-example"},"Quick example"),(0,a.kt)("p",null,'Here is an example of a "nerve.json" config file:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Nerve": {\n        "Ip": "0.0.0.0",\n        "Port": 5333,\n        "ForwarderMode": "https",\n        "Forwarders": [\n            "https://cloudflare-dns.com/dns-query"\n        ],\n        "Blocklists": [\n            {\n                "Ip": "0.0.0.0",\n                "Lists": [\n                    "C:\\\\Some\\\\Path\\\\my_blocklist.txt",\n                    "https://example.com/domains.txt"\n                ]\n            }\n        ]\n    },\n    "Logging": {\n        "LogLevel": {\n            "Default": "Debug",\n            "System": "Warning",\n            "Microsoft": "Warning"\n        },\n        "Console": {\n            "LogLevel": {\n                "Default": "Debug",\n                "System": "Warning",\n                "Microsoft": "Warning"\n            }\n        }\n    }\n}\n')),(0,a.kt)("h2",{id:"detailed-explanation"},"Detailed explanation"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Ip"),(0,a.kt)("td",{parentName:"tr",align:"center"},'"127.0.0.1"'),(0,a.kt)("td",{parentName:"tr",align:null},"The IP address where nerve binds to.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Port"),(0,a.kt)("td",{parentName:"tr",align:"center"},"53"),(0,a.kt)("td",{parentName:"tr",align:null},"The port where nerve binds to.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"ForwarderMode"),(0,a.kt)("td",{parentName:"tr",align:"center"},'"https"'),(0,a.kt)("td",{parentName:"tr",align:null},'In which forwarder mode to run ("https" = DNS over HTTPS, "udp" = DNS over UDP).')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Forwarders"),(0,a.kt)("td",{parentName:"tr",align:"center"},'["https://cloudflare-dns.com/dns-query"]'),(0,a.kt)("td",{parentName:"tr",align:null},'An array of the IPs ("udp" mode) or URIs ("https" mode).')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"Blocklists"),(0,a.kt)("td",{parentName:"tr",align:"center"},"[]"),(0,a.kt)("td",{parentName:"tr",align:null},"An array of blocklist objects containing the IP and an array of blocklist file paths or urls.")))))}u.isMDXComponent=!0}}]);